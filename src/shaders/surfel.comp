#version 450
#extension GL_GOOGLE_include_directive : require

#include "util.comp"

layout (local_size_x = 256) in;

#include "descriptor_sets.comp"

layout(set = 8, binding = 0) buffer SurfelBuffer {
    uint surfel_count;
    Surfel surfels[];
} surfel_buffer;

#include "raytracing.comp"

#define SMOOTHING_CONSTANT 0.1
#define GI_SAMPLES 2
void main() {
    uint g_id = gl_GlobalInvocationID.x;
    Surfel surfel = surfel_buffer.surfels[g_id];

    if (isnan(surfel.radius)) return;

    vec3 normal;
    vec3 offset;
    unpack_normal_offset(surfel.n_xy, surfel.nz_ox, surfel.o_yz, normal, offset);
    vec3 origin = offset + unpack_pos(surfel.packed_chunk_offset, surfel.packed_chunk_pos);

    vec4 color_add = vec4(0);
    for (int i = 0; i < GI_SAMPLES; i++) {
        vec3 ray_dir = cosine_hemisphere(normal);
        Intersection intersect;
        color_add += raymarch_brickgrid(origin, ray_dir, intersect);
    }
    
    vec3 new = color_add.xyz / GI_SAMPLES;
    surfel_buffer.surfels[g_id].accumulated += SMOOTHING_CONSTANT * (new - surfel.accumulated);
}